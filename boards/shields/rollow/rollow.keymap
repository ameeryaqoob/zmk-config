// build command: west build -d build/left -b nice_nano_v2 -- -DSHIELD=rollow_left -DZMK_CONFIG=/Users/ameer/zmk-config
// west build -d build/right -b nice_nano_v2 -- -DSHIELD=rollow_right -DZMK_CONFIG=/Users/ameer/zmk-config

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&mmv {
    acceleration-exponent = <1>;    
    time-to-max-speed-ms = <300>;     
    delay-ms = <0>;                  
};

&msc {
    acceleration-exponent = <3>;    
    time-to-max-speed-ms = <0>;    
    delay-ms = <0>;                 
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_escape {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&kp ESC>;
            };
        compatible = "zmk,combos";
        combo_numerals {
            timeout-ms = <50>;
            key-positions = <0 32>;
            bindings = <&to 4>;
            };
        compatible = "zmk,combos";
        combo_blue {
            timeout-ms = <50>;
            key-positions = <4 24>;
            bindings = <&to 5>;
            };
        compatible = "zmk,combos";
        combo_layerout {
            timeout-ms = <50>;
            key-positions = <31 34>;
            bindings = <&to 0>;
            };
        compatible = "zmk,combos";
        combo_mouse {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&to 1>;
            };
        compatible = "zmk,combos";
        combo_gamer {
            timeout-ms = <100>;
            key-positions = <2 10 14 26>;
            bindings = <&to 6>;
            };
        };
    behaviors {    
        hr: homerow_mods_and_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };  
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
         moto: moto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            bindings = <&mo>, <&to>;
        };  
         spacemouse: spacemouse {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <200>;
            bindings = <&mo>, <&kp>;
        };  
         returnnum: returnnum {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            quick-tap-ms = <200>;
            tapping-term-ms = <150>;
            bindings = <&mo>, <&kp>;
        };  
//----------------------ARROW MODS-------------------------
        left_upmed: left_upmed {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&upmed>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        right_downmed: right_downmed {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&downmed>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        scroll_mod: scroll_mod {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&left_upmed>, <&right_downmed>;
        };
        left_backspace: left_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp BSPC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        right_delete: right_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        left_alt_backspace: left_alt_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&left_backspace>, <&kp LA(BSPC)>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        right_alt_delete: right_alt_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&right_delete>, <&kp LA(DEL)>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        left_alt: left_alt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&left_alt_backspace>, <&kp LA(LEFT)>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        right_alt: right_alt {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&right_alt_delete>, <&kp LA(RIGHT)>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        left_gui: left_gui {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&left_alt>, <&kp LG(LEFT)>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        right_gui: right_gui {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&right_alt>, <&kp LG(RIGHT)>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        arrow_mods: arrow_mods {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&right_gui>, <&left_gui>;
        };
//--------------------MOUSE SCROLL ROTARY ENCODER FIX--------------------
        slow_y: slow_y {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&upslow>, <&downslow>;
        };
        slow_x: slow_x {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rightslow>, <&leftslow>;
        };
        med_y: med_y {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&upmed>, <&downmed>;
        };
        med_x: med_x {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rightmed>, <&leftmed>;
        };
        fast_y: fast_y {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&upfast>, <&downfast>;
        };
        fast_x: fast_x {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rightfast>, <&leftfast>;
        };
        
    macros {
        upslow: upslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_Y(-75)>;
         };
        downslow: downslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_Y(75)>;
         };
        leftslow: leftslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_X(75)>;
         };
        rightslow: rightslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_X(-75)>;
         };
        upmed: upmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_Y(-150)>;
         };
        downmed: downmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_Y(150)>;
         };
        leftmed: leftmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_X(150)>;
         };
        rightmed: rightmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_X(-150)>;
         };
        upfast: upfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_Y(-300)>;
         };
        downfast: downfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_Y(300)>;
         };
        leftfast: leftfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_X(300)>;
         };
        rightfast: rightfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 5>
                , <&msc SCRL_X(-300)>;
         };
//-----------------------------------------------------
        monumgui: monumgui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 4 &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI &mo 4>;
        };
        returnmo4: returnmo4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 4 &kp RETURN>
                , <&macro_pause_for_release>
                , <&macro_release &kp RETURN &mo 4>;
        };
    };
    keymap {
        compatible = "zmk,keymap";
        0 {
            display-name = "ALPHA"; // 8 character max
bindings = <
&kp Q &kp W &kp E &kp R &kp T                                          &kp Y &kp U &kp I &kp O &kp P
&kp A &hr LALT S &hr LGUI D &hr LCTRL F &kp G         &kp H &hr RCTRL J &hr RGUI K &hr RALT L &as SEMI APOS
&as LSHIFT Z &kp X &kp C &kp V &kp B                                   &kp N &kp M &kp COMMA &kp DOT &as RSHIFT SLASH
     &kp LC(LEFT) &spacemouse 1 SPACE &monumgui                                          &returnnum 4 RET &hr LS(LG(LA(LCTRL))) BSPC &kp RC(RIGHT)
              >;
            sensor-bindings = <&scroll_mod &arrow_mods>; //clockwise counterclockwise
        };
        1 {
            display-name = "MOUSE||";
bindings = <
&kp GRAVE &kp Q &kp W &kp E &kp R           &kp RG(X) &kp RG(C) &mmv MOVE_Y(-1500) &none &kp RG(V) 
&kp LSHIFT &kp A &kp S &kp D &kp F          &none &mmv MOVE_X(-1500) &mmv MOVE_Y(1500) &mmv MOVE_X(1500) &moto 3 3 
&kp TAB &kp Z &kp X &kp C &kp V             &none &mkp MB4 &mkp MB3 &mkp MB5 &moto 2 2  
            &trans &kp SPACE &monumgui         &mkp MB2 &mkp MB1 &trans
              >;
            sensor-bindings = <&med_y &med_x>; //clockwise counterclockwise
        };
        2 {
            display-name = "MOUSE|";
bindings = <
&kp GRAVE &kp Q &kp W &kp E &kp R           &kp RG(X) &kp RG(C) &mmv MOVE_Y(-500) &none &kp RG(V)  
&kp LSHIFT &kp A &kp S &kp D &kp F          &none &mmv MOVE_X(-500) &mmv MOVE_Y(500) &mmv MOVE_X(500) &to 1 
&kp TAB &kp Z &kp X &kp C &kp V             &none &mkp MB4 &mkp MB3 &mkp MB5 &none   
            &trans &kp SPACE &monumgui         &mkp MB2 &mkp MB1 &trans
              >;
            sensor-bindings = <&slow_y &slow_x>; //clockwise counterclockwise
        };
        3 {
            display-name = "MOUSE|||";
bindings = <
&kp GRAVE &kp Q &kp W &kp E &kp R           &kp RG(X) &kp RG(C) &mmv MOVE_Y(-2500) &none &kp RG(V) 
&kp LSHIFT &kp A &kp S &kp D &kp F          &none &mmv MOVE_X(-2500) &mmv MOVE_Y(2500) &mmv MOVE_X(2500) &none 
&kp TAB &kp Z &kp X &kp C &kp V             &none &mkp MB4 &mkp MB3 &mkp MB5 &to 1   
            &trans &kp SPACE &monumgui        &mkp MB2 &mkp MB1 &trans 
              >;
            sensor-bindings = <&fast_y &fast_x>; //clockwise counterclockwise
        };
        4 {
            display-name = "NUMERAL";
bindings = <
&kp N1 &kp N2 &kp N3 &kp N4 &kp N5           &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
&kp GRAVE &hr LALT TAB &kp LGUI &kp LCTRL &kp CAPS           &kp BSLH &hr RCTRL LBKT &hr RGUI RBKT &hr RALT MINUS &kp EQUAL 
&kp LSHIFT &none &none &none &none      &none &none &none &none &kp RSHIFT 
            &kp LC(LEFT) &kp SPACE &kp LGUI           &kp RET &kp BSPC &kp RC(RIGHT)
              >;
            sensor-bindings = <&inc_dec_kp UP DOWN &arrow_mods>; //clockwise counterclockwise
        };
        5 {
            display-name = "BLE";
bindings = <
&bt BT_CLR &none &none &none &none      &none &none &none &none &out OUT_TOG
&none &none &none &none &none           &none &none &none &none &none 
&none &none &none &none &none           &none &none &none &none &none 
            &none &none &bt BT_PRV      &bt BT_NXT &none &none
              >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_BRI_UP C_BRI_DN>; //clockwise counterclockwise
            };
        6 {
            display-name = "GAEMR"; // 8 character max
bindings = <
&kp Q &kp W &kp E &kp R &kp T               &kp Y &kp U &kp I &kp O &kp P
&kp A &kp S &kp D &kp F &kp G               &kp H &kp J &kp K &kp L &kp SEMI
&kp Z &kp X &kp C &kp V &kp B               &kp N &kp M &kp COMMA &kp DOT &kp SLASH
&kp GRAVE &kp SPACE &kp LSHIFT              &kp RET &kp BSPC &kp TAB
              >;
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT>; //clockwise counterclockwise
            };
        };
    };
};