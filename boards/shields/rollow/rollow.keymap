// build command: west build -d build/left -b nice_nano_v2 -- -DSHIELD=rollow_left -DZMK_CONFIG=/Users/ameer/zmk-config
// west build -d build/right -b nice_nano_v2 -- -DSHIELD=rollow_right -DZMK_CONFIG=/Users/ameer/zmk-config

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&mmv {
    acceleration-exponent = <1>;    
    time-to-max-speed-ms = <300>;     
    delay-ms = <0>;                  
};

&msc {
    acceleration-exponent = <0>;    
    time-to-max-speed-ms = <0>;    
    delay-ms = <0>;                 
};

/ {
combos {
        compatible = "zmk,combos";
        combo_escape {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&kp ESC>;
            };
        compatible = "zmk,combos";
        combo_numerals {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&to 4>;
            };
        compatible = "zmk,combos";
        combo_ble {
            timeout-ms = <50>;
            key-positions = <4 24>;
            bindings = <&to 5>;
            };
        compatible = "zmk,combos";
        combo_layerout {
            timeout-ms = <50>;
            key-positions = <31 33>;
            bindings = <&to 0>;
            };
        compatible = "zmk,combos";
        combo_mouse {
            timeout-ms = <50>;
            key-positions = <32 34>;
            bindings = <&to 1>;
            };
        compatible = "zmk,combos";
        combo_gamer {
            timeout-ms = <50>;
            key-positions = <2 10 14 26>;
            bindings = <&to 6>;
            };
        compatible = "zmk,combos";
        combo_nav {
            timeout-ms = <50>;
            key-positions = <10 23 25>;
            bindings = <&to 7>;
            };
        };
behaviors {    
        hr: homerow_mods_and_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };  
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        }; 
         spacemouse: spacemouse {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            require-prior-idle-ms = <200>;
            bindings = <&mo>, <&kp>;
        };  
         mokp: mokp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
            bindings = <&mo>, <&kp>;
        };  
         monavguito: monavguito {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
            bindings = <&monavgui>, <&to>;
        };  
         moto: moto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            bindings = <&mo>, <&to>;
        };  
//----------------------ARROW MODS-------------------------
        };
        left_backspace: left_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp BSPC>;
            mods = <(MOD_RCTL)>;
        };
        right_delete: right_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp DEL>;
            mods = <(MOD_RCTL)>;
        };
        left_alt_backspace: left_alt_backspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&left_backspace>, <&kp LA(BSPC)>;
            mods = <(MOD_LCTL)>;
        };
        right_alt_delete: right_alt_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&right_delete>, <&kp LA(DEL)>;
            mods = <(MOD_LCTL)>;
        };
        arrow_mods: arrow_mods {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&right_alt_delete>, <&left_alt_backspace>;
        };
//--------------------MOUSE SCROLL ROTARY ENCODER FIX--------------------
        slow_y: slow_y {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&downslow>, <&upslow>;
        };
        slow_x: slow_x {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rightslow>, <&leftslow>;
        };
        med_y: med_y {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&downmed>, <&upmed>;
        };
        med_x: med_x {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rightmed>, <&leftmed>;
        };
        fast_y: fast_y {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&downfast>, <&upfast>;
        };
        fast_x: fast_x {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rightfast>, <&leftfast>;
        };
        
macros {
        upslow: upslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_Y(-40)>;
         };
        downslow: downslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_Y(40)>;
         };
        leftslow: leftslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_X(40)>;
         };
        rightslow: rightslow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_X(-40)>;
         };
        upmed: upmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_Y(-200)>;
         };
        downmed: downmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_Y(200)>;
         };
        leftmed: leftmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_X(200)>;
         };
        rightmed: rightmed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_X(-200)>;
         };
        upfast: upfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_Y(-1000)>;
         };
        downfast: downfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_Y(1000)>;
         };
        leftfast: leftfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_X(1000)>;
         };
        rightfast: rightfast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap_time 3>
                , <&msc SCRL_X(-1000)>;
         };
//-----------------------------------------------------------
        monavgui: monavgui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 7 &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI &mo 7>;
         };
        up: up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp LGUI>
                , <&macro_press &kp UP>
                , <&macro_pause_for_release>
                , <&macro_release &kp UP>
                , <&macro_press &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI>;
         };
        down: down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp LGUI>
                , <&macro_press &kp DOWN>
                , <&macro_pause_for_release>
                , <&macro_release &kp DOWN>
                , <&macro_press &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI>;
         };
        left: left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp LGUI>
                , <&macro_press &kp LEFT>
                , <&macro_pause_for_release>
                , <&macro_release &kp LEFT>
                , <&macro_press &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI>;
         };
        right: right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp LGUI>
                , <&macro_press &kp RIGHT>
                , <&macro_pause_for_release>
                , <&macro_release &kp RIGHT>
                , <&macro_press &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI>;
         };
};
    keymap {
        compatible = "zmk,keymap";
        0 {
            display-name = "ALPHA"; // 8 character max
bindings = <
&kp Q &kp W &kp E &kp R &kp T                                          &kp Y &kp U &kp I &kp O &kp P
&kp A &hr LALT S &hr LGUI D &hr LCTRL F &kp G                          &kp H &hr RCTRL J &hr RGUI K &hr RALT L &as SEMI APOS
&as LSHIFT Z &kp X &kp C &kp V &kp B                                   &kp N &kp M &kp COMMA &kp DOT &as RSHIFT SLASH
     &kp UP &spacemouse 1 SPACE &monavguito 0 8                        &hr LS(LG(LA(LCTRL))) RET &mokp 4 BSPC &kp DOWN
              >;
            sensor-bindings = <&arrow_mods &inc_dec_kp DOWN UP>; //clockwise counterclockwise
        };
        1 {
            display-name = "MOUSEII";
bindings = <
&kp GRAVE &kp Q &kp W &kp E &kp R           &kp RG(X) &kp RG(C) &mmv MOVE_Y(-1500) &none &kp RG(V) 
&kp LSHIFT &kp A &kp S &kp D &kp F          &none &mmv MOVE_X(-1500) &mmv MOVE_Y(1500) &mmv MOVE_X(1500) &moto 3 3 
&kp TAB &kp Z &kp X &kp C &kp V             &none &mkp MB4 &mkp MB3 &mkp MB5 &moto 2 2  
            &trans &kp SPACE &monavgui         &mkp MB2 &mkp MB1 &trans
              >;
            sensor-bindings = <&med_x &med_y>; //clockwise counterclockwise
        };
        2 {
            display-name = "MOUSEI";
bindings = <
&kp GRAVE &kp Q &kp W &kp E &kp R           &kp RG(X) &kp RG(C) &mmv MOVE_Y(-500) &none &kp RG(V)  
&kp LSHIFT &kp A &kp S &kp D &kp F          &none &mmv MOVE_X(-500) &mmv MOVE_Y(500) &mmv MOVE_X(500) &to 1
&kp TAB &kp Z &kp X &kp C &kp V             &none &mkp MB4 &mkp MB3 &mkp MB5 &none   
            &trans &kp SPACE &monavgui         &mkp MB2 &mkp MB1 &trans
              >;
            sensor-bindings = <&slow_x &slow_y>; //clockwise counterclockwise
        };
        3 {
            display-name = "MOUSEIII";
bindings = <
&kp GRAVE &kp Q &kp W &kp E &kp R           &kp RG(X) &kp RG(C) &mmv MOVE_Y(-3000) &none &kp RG(V) 
&kp LSHIFT &kp A &kp S &kp D &kp F          &none &mmv MOVE_X(-3000) &mmv MOVE_Y(3000) &mmv MOVE_X(3000) &none 
&kp TAB &kp Z &kp X &kp C &kp V             &none &mkp MB4 &mkp MB3 &mkp MB5 &to 1
            &trans &kp SPACE &monavgui        &mkp MB2 &mkp MB1 &trans 
              >;
            sensor-bindings = <&fast_x &fast_y>; //clockwise counterclockwise
        };
        4 {
            display-name = "NUMERAL";
bindings = <
&kp N1 &kp N2 &kp N3 &kp N4 &kp N5                        &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
&kp GRAVE &hr LALT TAB &kp LGUI &kp LCTRL &kp CAPS        &kp BSLH &hr RCTRL LBKT &hr RGUI RBKT &hr RALT EQUAL &kp MINUS 
&kp LSHIFT &none &none &none &none                        &none &none &none &none &kp RSHIFT 
            &trans &kp SPACE &monavgui                    &kp RET &kp BSPC &trans
              >;
            sensor-bindings = <&arrow_mods &inc_dec_kp DOWN UP>; //clockwise counterclockwise
        };
        5 {
            display-name = "BLE";
bindings = <
&bt BT_CLR &none &none &none &none      &none &none &none &none &out OUT_TOG
&none &none &none &none &none           &none &none &none &none &none 
&none &none &none &none &none           &none &none &none &none &none 
            &none &none &bt BT_PRV      &bt BT_NXT &none &none
              >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_BRI_UP C_BRI_DN>; //clockwise counterclockwise
            };
        6 {
            display-name = "GAEM"; // 8 character max
bindings = <
&kp Q &kp W &kp E &kp R &kp T               &kp Y &kp U &kp I &kp O &kp P
&kp A &kp S &kp D &kp F &kp G               &kp H &kp J &kp K &kp L &kp SEMI
&kp Z &kp X &kp C &kp V &kp B               &kp N &kp M &kp COMMA &kp DOT &kp SLASH
&kp GRAVE &kp SPACE &kp LSHIFT              &kp RET &kp BSPC &kp TAB
              >;
            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp DOWN UP>; //clockwise counterclockwise
            };
        7 {
            display-name = "NAV";
bindings = <
&kp N1 &kp N2 &kp N3 &kp N4 &kp N5           &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
&kp GRAVE &kp TAB &none &none &none          &kp PG_UP &left &up &right &down  
&none &none &none &none &none                &kp PG_DN &none &none &none &none
      &none &none &none                      &none &none &none
              >;
            sensor-bindings = <&arrow_mods &inc_dec_kp C_VOL_UP C_VOL_DN>; //clockwise counterclockwise
            };
        8 {
            display-name = "FUNCTION";
bindings = <
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5           &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
&kp F11 &hr LALT F12 &kp LGUI &kp LCTRL &none &none &kp RCTRL &kp RGUI &kp RALT &none  
&none &none &none &none &none                &none &none &none &none &none
      &none &none &to 0                      &none &none &none
              >;
            sensor-bindings = <&arrow_mods &inc_dec_kp C_VOL_UP C_VOL_DN>; //clockwise counterclockwise
            };
        };
    };