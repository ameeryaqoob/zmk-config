//sudo west build -p -d build/left -b nice_nano_v2 -- -DSHIELD=corne_left -DZMK_CONFIG=/Users/ameer/keyboard/zmk-config/config
//sudo west build -p -d build/right -b nice_nano_v2 -- -DSHIELD=corne_right -DZMK_CONFIG=/Users/ameer/keyboard/zmk-config/config

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC>;
};
&sl {
    release-after-ms = <10000>;
};
/ {
behaviors {    
        msc: mouse_scroll {
            compatible = "zmk,behavior-input-two-axis";
            #binding-cells = <1>;
            x-input-code = <INPUT_REL_HWHEEL>;
            y-input-code = <INPUT_REL_WHEEL>;
            time-to-max-speed-ms = <300>;
            acceleration-exponent = <0>;
        };
        mmv: mouse_move {
            compatible = "zmk,behavior-input-two-axis";
            #binding-cells = <1>;
            x-input-code = <INPUT_REL_X>;
            y-input-code = <INPUT_REL_Y>;
            time-to-max-speed-ms = <300>;
            acceleration-exponent = <1>;
        };
        hr: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <200>;
            bindings = <&kp>, <&kp>;
        };  
        kpkphp: kpkphp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        }; 
        kpkptp: kpkptp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        }; 
        esckp: escape_keypress {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&esc>, <&kp>;
        }; 
         monumkphp: mo_numerals_kphp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&num>, <&mkp>;
        };  
         mokphp: mokphp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred"; 
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };  
         mokptp: mokptp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };  
         mokpb: mokpb {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        }; 
         moto: moto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            bindings = <&mo>, <&to>;
        };
         mocapsword: mocapsword {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&caps_word>;
        }; 
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };
        mod_scrl_dl: scroll_down_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&msc MOVE_Y(16)>, <&msc MOVE_X(16)>;
            mods = <(MOD_LSFT)>;
        };
        mod_scrl_ru: scroll_right_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&msc MOVE_Y(-16)>, <&msc MOVE_X(-16)>;
            mods = <(MOD_LSFT)>;
        };
        mod_mouselb: mouse_left_boost {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_X(-1500)>, <&mmv MOVE_X(-3000)>;
            mods = <(MOD_LSFT)>;
        };
        mod_mouserb: mouse_right_boost {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_X(1500)>, <&mmv MOVE_X(3000)>;
            mods = <(MOD_LSFT)>;
        };
        mod_mouseub: mouse_up_boost {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_Y(-1500)>, <&mmv MOVE_Y(-3000)>;
            mods = <(MOD_LSFT)>;
        };
        mod_mousedb: mouse_down_boost {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mmv MOVE_Y(1500)>, <&mmv MOVE_Y(3000)>;
            mods = <(MOD_LSFT)>;
        }; 
        td_layers: tap_dance_layers {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sl 6>, <&to 2>, <&to 5>, <&to 4>;
        };
    macros {
        num: numerals {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &to 1>
                , <&macro_pause_for_release>
                , <&macro_press &to 5>;
         };
        esc: escape {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp ESC>;
         };
    };
    keymap {
        compatible = "zmk,keymap";
        0 {
            display-name = "QWERTY"; // 8 character max
bindings = <
&none &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U &kp I &kp O &kp P &none 
&none &hr LSHIFT A &hr LALT S &hr LGUI D &hr LCTRL F &hr LS(LG(LA(LCTRL))) G       &hr LS(LG(LA(LCTRL))) H &hr RCTRL J &hr RGUI K &hr RALT L &hr LSHIFT APOS &none 
&none &hr GLOBE Z &kp X &kp C &kp V &kp B                                                &kp N &kp M &kp COMMA &kp DOT &hr GLOBE SLASH &none 
&td_layers &mokphp 2 TAB &mokpb 1 SPACE                                             &kpkphp RSHIFT BSPC &mokphp 7 RETURN &mocapsword 3 0
              >;
        };
        1 {
            display-name = "NUMERALS";
bindings = <
&none &kp EXCLAMATION &kp AT &kp HASH &kp DOLLAR &kp PERCENT                                                                   &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &none 
&none &hr LSHIFT N1 &hr LALT N2 &hr LGUI N3 &hr LCTRL N4 &hr LS(LG(LA(LCTRL))) N5           &hr LS(LG(LA(LCTRL))) N6 &hr RCTRL N7 &hr RGUI N8 &hr RALT N9 &hr LSHIFT N0 &none 
&none &hr GLOBE COLON &kp LBKT &kp RBKT &kp PLUS &kp EQUAL                                                               &kp UNDER &kp MINUS &kp LBRC &kp RBRC &hr GLOBE SEMI &none 
&kp BSLH &kp TILDE &none                                                                                 &esckp 0 DEL &kpkptp TILDE GRAVE &kpkptp BSLH PIPE
              >;
        };  
        2 {
            display-name = "MOUSE";
bindings = <
&none &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &kp LG(N5)                                &none &kp LG(LEFT) &kp LG(UP) &kp LG(RIGHT) &kp LG(DOWN) &none 
&none &hr LSHIFT LG(N6) &hr LALT LG(N7) &hr LGUI LG(N8) &hr LCTRL LG(N9) &kp LS(LG(LA(LCTRL))) &kp PG_UP &mmv MOVE_X(-1500) &mmv MOVE_Y(-1500) &mmv MOVE_X(1500) &mmv MOVE_Y(1500) &none 
&none &kp GLOBE &none &none &none &none                                  &kp PG_DN &mkp MB4 &mkp MB3 &mkp MB5 &mkp MB2 &none 
&to 0 &none &kp SPACE                                                 &mkp MB1 &mod_scrl_dl &mod_scrl_ru
              >;
        };
        3 {
            display-name = "BLE";
bindings = <
&none &bt BT_CLR_ALL &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &none                              &none &kp C_BRI_DN &kp C_BRI_UP &none &out OUT_BLE &none 
&none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &none 
&none &bt BT_CLR &none &none &none &none                                 &none &none &none &none &out OUT_USB &none 
            &to 0 &ext_power EP_OFF &none                                &none &ext_power EP_ON &none
              >;
        };
        4 {
            display-name = "GAEM"; // 8 character max
bindings = <
&none &kp Q &kp W &kp E &kp R &kp T               &kp Y &kp U &kp I &kp O &kp P &none 
&none &kp A &kp S &kp D &kp F &kp G               &kp H &kp J &kp K &kp L &kp SEMI &none 
&none &kp Z &kp X &kp C &kp V &kp B               &kp N &kp M &kp COMMA &kp DOT &kp SLASH &none 
&to 0 &kp TAB &kp SPACE                 &kp N1 &kp APOS &kp N2
              >;
        };
        5 {
            display-name = "MINECRFT";
bindings = <
&none &kp GRAVE &kp Q &kp W &kp E &kp R                              &none &none &none &none &none &none 
&none &kp LSHIFT &kp A &kp S &kp D &kp F                         &kp PG_UP &mmv MOVE_X(-1500) &mmv MOVE_Y(-1500) &mmv MOVE_X(1500) &mmv MOVE_Y(1500) &none 
&none &kp Z &kp X &kp C &kp V &kp B                               &kp PG_DN &mkp MB4 &mkp MB3 &mkp MB5 &sl 5 &none 
&to 0 &none &kp SPACE                                          &mkp MB1 &monumkphp 0 MB2 &mkp MB2
              >;  
        };
        6 {
            display-name = "FUNCTION";
bindings = <
&none &kp F1 &kp F2 &kp F3 &kp F4 &kp F5           &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &none 
&none &hr LSHIFT F11 &hr LALT F12 &hr LGUI F13 &hr LCTRL F14 &hr LS(LG(LA(LCTRL))) F15 &hr LS(LG(LA(LCTRL))) F16 &hr RCTRL F17 &hr RGUI F18 &hr RALT F19 &hr LSHIFT F20 &none 
&none &hr GLOBE F21 &kp F22 &kp F23 &kp F24 &none                &none &none &none &none &kp GLOBE &none 
      &to 0 &none &none                     &none &none &none
              >;
            };
        7 {
            display-name = "ARROWS";
bindings = <
&none &none &none &none &none &none                         &none &none &none &none &none &none 
&none &kp LSHIFT &kp LALT &kp LGUI &kp LCTRL &kp LS(LG(LA(LCTRL))) &none &kp LEFT &kp UP &kp RIGHT &kp DOWN &none 
&none &none &none &none &none &none                &none &none &none &none &none &none 
      &to 0 &none &none                     &none &none &none
              >;
            };
        };
    };
};